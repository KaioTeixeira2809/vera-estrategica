from fastapi import FastAPI
from pydantic import BaseModel

app = FastAPI()

class TextoRequest(BaseModel):
    texto: str

def gerar_relatorio_executivo(texto: str) -> str:
    # Simula√ß√£o de gera√ß√£o de relat√≥rio preditivo completo com base no texto
    # Em produ√ß√£o, aqui seria feita uma chamada a um modelo de linguagem (LLM)
    
    # Se√ß√µes do relat√≥rio
    status_geral = "‚úÖ Status Geral:\nO projeto est√° em andamento com desempenho moderado. Indicadores sugerem aten√ß√£o preventiva."
    
    diagnostico = (
        "üîç Diagn√≥stico de Performance:\n"
        "CPI indica custo acima do planejado. SPI mostra atraso no cronograma. "
        "Avan√ßo f√≠sico e financeiro est√£o pr√≥ximos, mas abaixo da meta. "
        "Contrato por pre√ßo unit√°rio exige controle rigoroso. Risco m√©dio identificado."
    )
    
    impactos = (
        "üìà Proje√ß√£o de Impactos:\n"
        "Poss√≠veis atrasos de at√© 2 meses e acr√©scimos de custo de 5 a 10%. "
        "Impacto operacional moderado e risco de comprometimento de metas estrat√©gicas."
    )
    
    recomendacoes = (
        "üéØ Recomenda√ß√µes Estrat√©gicas:\n"
        "Revisar cronograma e renegociar entregas. Estabelecer metas de CPI > 0.95 e SPI > 0.98. "
        "Aumentar supervis√£o e comunica√ß√£o entre √°reas envolvidas."
    )
    
    pilares_eck = (
        "üèõÔ∏è Avalia√ß√£o de Pilar ECK:\n"
        "O projeto se enquadra no Pilar K (Aloca√ß√£o de Capital), pois visa refor√ßo de infraestrutura com impacto direto na gera√ß√£o de valor. "
        "Tamb√©m contribui para Pilar E (Excel√™ncia Organizacional) ao exigir alinhamento entre √°reas. "
        "N√£o se enquadra diretamente no Pilar C (Foco no Cliente), pois n√£o h√° interface direta com o consumidor final."
    )
    
    conclusao = (
        "üß† Conclus√£o Executiva:\n"
        "O projeto apresenta riscos moderados e oportunidades de melhoria. "
        "Recomenda-se foco em capital e excel√™ncia organizacional para garantir entrega com efici√™ncia e valor estrat√©gico."
    )
    
    relatorio = (
        f"{status_geral}\n\n"
        f"{diagnostico}\n\n"
        f"{impactos}\n\n"
        f"{recomendacoes}\n\n"
        f"{pilares_eck}\n\n"
        f"{conclusao}"
    )
    
    return relatorio

@app.post("/analisar-projeto-texto")
async def analisar_projeto_texto(payload: TextoRequest):
    texto = payload.texto
    relatorio = gerar_relatorio_executivo(texto)
    return {"conclusao_executiva": relatorio}

